AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template to deploy an EC2 instance with parameterized AMI ID and Instance Type, with open ports for backend

Parameters:
  InstanceType:
    Type: String
    Description: EC2 Instance Type
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
      - t3.small
      - t3.medium
    ConstraintDescription: Must be a valid EC2 instance type.

  AmiId:
    Type: AWS::EC2::Image::Id
    Description: The AMI ID to be used for the EC2 instance
    Default: ami-0c55b159cbfafe1f0 # Example AMI ID (Amazon Linux 2)
    ConstraintDescription: Must be a valid AMI ID for the region.

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmiId
      Tags:
        - Key: Name
          Value: MyEC2Instance
      SecurityGroups:
        - Ref: InstanceSecurityGroup

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Enable SSH, HTTP, HTTPS, and backend access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'   # SSH
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'   # HTTP
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'  # HTTPS
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '5000' # Backend application port
          ToPort: '5000'
          CidrIp: 0.0.0.0/0

Outputs:
  InstanceId:
    Description: The Instance ID of the EC2 instance
    Value: !Ref EC2Instance

  PublicIp:
    Description: The public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
